// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Category {
  id Int @id @default(autoincrement())
  name String @unique
  created_at DateTime @default(now())
  deleted_at DateTime?
  posts Post[]
}

model Post {
  id Int @id @default(autoincrement())
  category_id Int
  title String
  content String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  published_at DateTime?
  deleted_at DateTime?
  category Category @relation(fields: [category_id], references: [id], onDelete: Cascade)
  comments Comment[]
  tags PostTag[]
}

model Comment {
  id Int @id @default(autoincrement())
  post_id Int
  content String
  commenter_name String
  created_at DateTime @default(now())
  deleted_at DateTime?
  post Post @relation(fields: [post_id], references: [id], onDelete: Cascade)
}

model Tag {
  id Int @id @default(autoincrement())
  name String @unique
  posts PostTag[]
}

model PostTag {
  post_id Int
  tag_id Int
  post Post @relation(fields: [post_id], references: [id], onDelete: Cascade)
  tag Tag @relation(fields: [tag_id], references: [id], onDelete: Cascade)

  @@id([post_id, tag_id])
}